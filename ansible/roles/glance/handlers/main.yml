---
# Docker handlers
- name: Restart glance-api container
  vars:
    service_name: "glance-api"
    service: "{{ glance_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged }}"
    environment: "{{ service.environment }}"
    volumes: "{{ service.volumes|reject('equalto', '')|list }}"
    dimensions: "{{ service.dimensions }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"
    - kolla_container_engine == 'docker'

- name: Restart glance-tls-proxy container
  vars:
    service_name: "glance-tls-proxy"
    service: "{{ glance_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes|reject('equalto', '')|list }}"
    dimensions: "{{ service.dimensions }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"
    - kolla_container_engine == 'docker'

# Podman handlers
- name: Restart glance-api container
  vars:
    service_name: "glance-api"
    service: "{{ glance_services[service_name] }}"
  become: true
  containers.podman.podman_container:
    state: started
    restart: yes
    network: "host"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged }}"
    environment: "{{ service.environment }}"
    volumes: "{{ service.volumes|reject('equalto', '')|list }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"
    - kolla_container_engine == 'podman'


- name: Restart glance-tls-proxy container
  vars:
    service_name: "glance-tls-proxy"
    service: "{{ glance_services[service_name] }}"
  become: true
  containers.podman.podman_container:
    state: started
    restart: yes
    network: "host"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes|reject('equalto', '')|list }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"
    - kolla_container_engine == 'podman'
