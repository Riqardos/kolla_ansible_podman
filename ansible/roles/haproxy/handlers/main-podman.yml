---

- name: Stop backup keepalived container
  become: true
  containers.podman.podman_container:
    state: stopped
    name: "keepalived"
  when:
    - kolla_action != "config"
    - groups.kolla_ha_is_master_False is defined
    - inventory_hostname in groups.kolla_ha_is_master_False
  listen:
    - Restart keepalived container

- name: Restart backup haproxy container
  vars:
    service_name: "haproxy"
    service: "{{ haproxy_services[service_name] }}"
  become: true
  containers.podman.podman_container:
    state: started
    restart: yes
    #action: "recreate_or_restart_container"
    #common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged | default(False) }}"
    volumes: "{{ service.volumes }}"
    env: 
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
    #dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"
    - groups.kolla_ha_is_master_False is defined
    - inventory_hostname in groups.kolla_ha_is_master_False
  listen:
    - Restart haproxy container
    - Restart keepalived container
  notify:
    - Wait for backup haproxy to start

- name: Wait for backup haproxy to start
  wait_for:
    host: "{{ api_interface_address }}"
    port: "{{ haproxy_monitor_port }}"

- name: Start backup keepalived container
  vars:
    service_name: "keepalived"
    service: "{{ haproxy_services[service_name] }}"
  become: true
  containers.podman.podman_container:
    state: started
    restart: yes
   # action: "recreate_or_restart_container"
    #common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged | default(False) }}"
    volumes: "{{ service.volumes }}"
    env: 
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
    #dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"
    - groups.kolla_ha_is_master_False is defined
    - inventory_hostname in groups.kolla_ha_is_master_False
  listen:
    - Restart keepalived container
  notify:
    - Wait for virtual IP to appear

# NOTE(yoctozepto): This is to ensure haproxy can close any open connections
# to the VIP address.
- name: Stop master haproxy container
  become: true
  containers.podman.podman_container:
    state: stopped
    #action: "stop_container"
    #common_options: "{{ docker_common_options }}"
    name: "haproxy"
  when:
    - kolla_action != "config"
    - groups.kolla_ha_is_master_True is defined
    - inventory_hostname in groups.kolla_ha_is_master_True
  listen:
    - Restart keepalived container

- name: Stop master keepalived container
  become: true
  containers.podman.podman_container:
    state: stopped
    name: "keepalived"
  when:
    - kolla_action != "config"
    - groups.kolla_ha_is_master_True is defined
    - inventory_hostname in groups.kolla_ha_is_master_True
  listen:
    - Restart keepalived container

- name: Start master haproxy container
  vars:
    service_name: "haproxy"
    service: "{{ haproxy_services[service_name] }}"
  become: true
  containers.podman.podman_container:
    state: started
    restart: yes
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged | default(False) }}"
    volumes: "{{ service.volumes }}"
    env: 
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when:
    - kolla_action != "config"
    - groups.kolla_ha_is_master_True is defined
    - inventory_hostname in groups.kolla_ha_is_master_True
  listen:
    - Restart haproxy container
    - Restart keepalived container
  notify:
    - Wait for master haproxy to start

- name: Start master keepalived container
  vars:
    service_name: "keepalived"
    service: "{{ haproxy_services[service_name] }}"
  become: true
  containers.podman.podman_container:
    state: started
    restart: yes
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged | default(False) }}"
    volumes: "{{ service.volumes }}"
    env: 
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when:
    - kolla_action != "config"
    - groups.kolla_ha_is_master_True is defined
    - inventory_hostname in groups.kolla_ha_is_master_True
  listen:
    - Restart keepalived container
  notify:
    - Wait for virtual IP to appear
