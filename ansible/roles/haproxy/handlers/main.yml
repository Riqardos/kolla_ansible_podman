---
# NOTE(yoctozepto): this handler dance is to ensure we delay restarting master
# keepalived and haproxy which control VIP address until we have working backups.
# This could be improved by checking if backup keepalived do not report FAULT state.
# Master node is handled specially to let it close down connections and only then
# drop the VIP address by stopping keepalived service.

# NOTE(yoctozepto): we need fresh VIP address placement info (facts may be old)
- name: Check IP addresses on the API interface
  vars:
    version: "{{ '6' if api_address_family == 'ipv6' else '4' }}"
  become: true
  command: ip -{{ version }} -o addr show dev {{ api_interface }}
  register: ip_addr_output
  changed_when: false
  when:
    - kolla_action != "config"
  listen:
    - Restart haproxy container
    - Restart keepalived container

- name: Group HA nodes by status
  vars:
    re_safe_address: "{{ kolla_internal_vip_address | regex_escape }}"
  group_by:
    key: kolla_ha_is_master_{{ ip_addr_output.stdout is regex('\b' + re_safe_address + '\b') }}
  changed_when: false
  when:
    - kolla_action != "config"
  listen:
    - Restart haproxy container
    - Restart keepalived container

- name: Wait for backup haproxy to start
  wait_for:
    host: "{{ api_interface_address }}"
    port: "{{ haproxy_monitor_port }}"

- name: Wait for master haproxy to start
  wait_for:
    host: "{{ api_interface_address }}"
    port: "{{ haproxy_monitor_port }}"

- name: Wait for virtual IP to appear
  wait_for:
    host: "{{ kolla_internal_vip_address }}"
    port: "{{ haproxy_monitor_port }}"

- import_tasks: main-docker.yml
  when: kolla_container_engine == 'docker'
  
- import_tasks: main-podman.yml
  when: kolla_container_engine == 'podman'
